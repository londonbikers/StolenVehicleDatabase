(function (a) { a.fn.CascadingDropDown = function (b, c, d) { if (typeof b === "undefined") { throw "A source element is required" } if (typeof c == "undefined") { throw "An action path is requried" } var e = "<option></option>"; var f = a.extend({}, a.fn.CascadingDropDown.defaults, d); return this.each(function () { var d = a(this); (function () { var g = { clearItems: function () { d.empty(); if (!d.attr("disabled")) { d.attr("disabled", "disabled") } }, reset: function () { g.clearItems(); d.append(a(e).attr("value", "").text(f.promptText)); d.trigger("change") }, initialize: function () { if (d.children().size() == 0) { g.reset() } }, showLoading: function () { g.clearItems(); d.append(a(e).attr("value", "").text(f.loadingText)) }, loaded: function () { d.removeAttr("disabled"); d.trigger("change") }, showError: function () { g.clearItems(); d.append(a(e).attr("value", "").text(f.errorText)) }, post: function () { g.showLoading(); a.isFunction(f.onLoading) && f.onLoading.call(d); a.ajax({ url: c, type: "POST", dataType: "json", data: (typeof f.postData == "function" ? f.postData() : f.postData) || a(b).serialize(), success: function (b) { g.reset(); a.each(b, function () { d.append(a(e).attr("value", this.Value).text(this.Text)) }); g.loaded(); a.isFunction(f.onLoaded) && f.onLoaded.call(d) }, error: function () { g.showError() } }) } }; a(b).change(function () { var c = a(b); if (c.val() != "") { g.post() } else { g.reset() } }); g.initialize() })() }) }; a.fn.CascadingDropDown.defaults = { promptText: "-- Select --", loadingText: "Loading ..", errorText: "Error loading data.", postData: null, onLoading: null, onLoaded: null} })(jQuery)